@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
participant "CommandTracker" as CommandTracker LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

'== Initial user input: "delete 1" =='

[-> LogicManager : execute("delete 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete 1")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("1")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandParser :
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.'
DeleteCommandParser -[hidden]-> AddressBookParser
destroy DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeleteCommand : execute(m)
activate DeleteCommand

' This returns a CommandResult that requires confirmation'
create CommandResult
DeleteCommand -> CommandResult : new CommandResult(toBeConfirmed = true)
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

' LogicManager sets pendingConfirmation = d and returns r'
[<-- LogicManager : CommandResult (confirmation prompt)
deactivate LogicManager

' == User confirms: "yes" =='
[-> LogicManager : execute("yes")
activate LogicManager

LogicManager -> AddressBookParser : parseConfirmation("yes")
activate AddressBookParser
AddressBookParser --> LogicManager : true
deactivate AddressBookParser

LogicManager -> DeleteCommand : executeConfirmed(m)
activate DeleteCommand

DeleteCommand -> Model : deletePerson(1)
activate Model

Model --> DeleteCommand
deactivate Model

create CommandResult
DeleteCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

opt is UndoableCommand
    LogicManager -> CommandTracker : getInstance()
    activate CommandTracker

    CommandTracker -> CommandTracker : push(d)
    activate CommandTracker

    CommandTracker --> LogicManager
    deactivate CommandTracker

    deactivate CommandTracker
end

[<-- LogicManager : CommandResult (confirmed)
deactivate LogicManager
@enduml
